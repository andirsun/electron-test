# This is responsible for build and publish desktop apps for Linux, Windows and Mac os
# Example https://github.com/samuelmeuli/mini-diary/blob/master/.github/workflows/release.yml
name: Build/release

on:
  pull_request

jobs:
  build:
    name: Build - With Cache
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/.next/cache

          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - run: npm i && npm run build

      - uses: actions/cache@v3
        if: ${{ !env.ACT }}
        id: restore-build
        with:
          path: ./app
          key: ${{ github.sha }}

  release:
    name: Pack - Release
    runs-on: macos-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./app
          key: ${{ github.sha }}

      - run: ls .

      - run: npm ci && npm run test

      - name: Prepare for app notarization
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8

      - name: Build/release App
        uses: CryogenicPlanet/action-electron-builder@v2 # Using CryogenicPlanet until the main action adds skip_install https://github.com/samuelmeuli/action-electron-builder/pull/60
        with:
          skip_build: true
          skip_install: true
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Sign the code with apple developer certificates
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          max_attempts: 2
          release: false
        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.API_KEY_ID }}
          API_KEY_ISSUER_ID: ${{ secrets.API_KEY_ISSUER_ID }}

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ./dist